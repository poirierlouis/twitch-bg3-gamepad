(()=>{const defines={};const entry=[null];function define(name,dependencies,factory){defines[name]={dependencies:dependencies,factory:factory};entry[0]=name}define("require",["exports"],exports=>{Object.defineProperty(exports,"__cjsModule",{value:true});Object.defineProperty(exports,"default",{value:name=>resolve(name)})});define("vector2",["require","exports"],function(require,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true})});define("gamepad-event",["require","exports","gamepad-input"],function(require,exports,gamepad_input_1){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.GamepadEvents=exports.JoystickEvents=void 0;class JoystickEvents{static buttons=["T","B","L","R","TL","TR","BL","BR"];T;B;L;R;TL;TR;BL;BR;getActiveButton(){for(const button of JoystickEvents.buttons){if(this[button]!==undefined){return button}}return undefined}}exports.JoystickEvents=JoystickEvents;class GamepadEvents{A;B;X;Y;UP;DOWN;LEFT;RIGHT;LT;RT;LB;RB;L3;R3;LJ=new JoystickEvents;RJ=new JoystickEvents;queueButtons=[];queueJoysticks=[];lastInput;consumeInput(input){const delta=this.lastInput?input.timestamp-this.lastInput.timestamp:1/60;for(const button of gamepad_input_1.GAMEPAD_BUTTONS){this.queueButton(input,button,delta)}const left=this.buildJoystickEvent("left",input.LJ);const right=this.buildJoystickEvent("right",input.RJ);this.queueJoystick("left",left,delta);this.queueJoystick("right",right,delta);this.lastInput=input}nextButton(){if(this.queueButtons.length===0){return undefined}const event=this.queueButtons[0];this.queueButtons.splice(0,1);return event}nextJoystick(){if(this.queueJoysticks.length===0){return undefined}const event=this.queueJoysticks[0];this.queueJoysticks.splice(0,1);return event}queueButton(input,button,delta){const isPressed=input[button];if(isPressed){if(this[button]===undefined){this[button]={button:button,duration:delta}}else{this[button].duration+=delta}}else if(this[button]){this.queueButtons.push(this[button]);this[button]=undefined}}queueJoystick(side,event,delta){const events=this[side==="left"?"LJ":"RJ"];const button=(0,gamepad_input_1.getJoystickButton)(event);const activeButton=events.getActiveButton();if(this.isActive(event)){if(events[button]===undefined){events[button]={side:side,button:button,duration:delta}}else{events[button].duration+=delta}}else if(this.isInDeadZone(event)&&activeButton!==undefined){this.queueJoysticks.push(events[activeButton]);events[activeButton]=undefined}}isInDeadZone(event){return event.length<.2}isActive(event){return event.length>=.8}buildJoystickEvent(side,position){let length=Math.sqrt(position.x*position.x+position.y*position.y);let angle=0;if(position.x!==0&&position.y!==0){angle=Math.atan2(position.y,position.x)*180/Math.PI}return{side:side,angle:angle,length:length,timestamp:performance.now()}}}exports.GamepadEvents=GamepadEvents});define("gamepad-input",["require","exports"],function(require,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.getInput=exports.getJoystickButton=exports.GAMEPAD_BUTTONS=void 0;const GAMEPAD_BINDING=[{index:0,button:"A"},{index:1,button:"B"},{index:2,button:"X"},{index:3,button:"Y"},{index:12,button:"UP"},{index:13,button:"DOWN"},{index:14,button:"LEFT"},{index:15,button:"RIGHT"},{index:4,button:"LT"},{index:5,button:"RT"},{index:6,button:"LB"},{index:7,button:"RB"},{index:10,button:"L3"},{index:11,button:"R3"}];const JOYSTICK_BINDING=[{min:-22.5,max:22.5,button:"R"},{min:-67.5,max:-22.5,button:"BR"},{min:-112.5,max:-67.5,button:"B"},{min:-157.5,max:-112.5,button:"BL"},{min:112.5,max:157.5,button:"TL"},{min:67.5,max:112.5,button:"T"},{min:22.5,max:67.5,button:"TR"}];exports.GAMEPAD_BUTTONS=GAMEPAD_BINDING.map(bind=>bind.button);function isButtonPressed(button){if(typeof button==="object"){return button.pressed}return button===1}function getJoystickButton(event){for(const bind of JOYSTICK_BINDING){if(event.angle>=bind.min&&event.angle<=bind.max){return bind.button}}return"L"}exports.getJoystickButton=getJoystickButton;function getInput(gamepad){const input={LJ:{x:0,y:0},RJ:{x:0,y:0},timestamp:performance.now()};for(const bind of GAMEPAD_BINDING){input[bind.button]=isButtonPressed(gamepad.buttons[bind.index])}input.LJ.x=gamepad.axes[0];input.LJ.y=gamepad.axes[1]*-1;input.RJ.x=gamepad.axes[2];input.RJ.y=gamepad.axes[3]*-1;return input}exports.getInput=getInput});define("simulate",["require","exports"],function(require,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.sleep=exports.simulateBlur=exports.simulateErase=exports.simulatePaste=void 0;async function simulatePaste($element,message){document.dispatchEvent(buildFocusEvent());$element.dispatchEvent(buildFocusEvent());$element.click();await sleep(50);$element.dispatchEvent(buildPasteEvent(message))}exports.simulatePaste=simulatePaste;async function simulateErase($element){document.dispatchEvent(buildFocusEvent());$element.dispatchEvent(buildFocusEvent());$element.click();await sleep(50);$element.dispatchEvent(buildEraseEvent())}exports.simulateErase=simulateErase;function simulateBlur($element){$element.dispatchEvent(buildBlurEvent());document.dispatchEvent(buildFocusEvent());document.body.click()}exports.simulateBlur=simulateBlur;function buildPasteEvent(message){const event=new Event("paste",{bubbles:true,cancelable:true,composed:true});event.clipboardData={getData:()=>message};return event}function buildEraseEvent(){return new InputEvent("beforeinput",{view:window,bubbles:true,cancelable:true,composed:true,inputType:"deleteHardLineBackward"})}function buildFocusEvent(options){let eventInit={bubbles:true,cancelable:true,composed:true,detail:0,which:0};if(options){eventInit=Object.assign({},eventInit,options)}return new FocusEvent("focus",eventInit)}function buildBlurEvent(options){let eventInit={bubbles:true,cancelable:true,composed:true,detail:0,which:0};if(options){eventInit=Object.assign({},eventInit,options)}return new FocusEvent("blur",eventInit)}function sleep(time){return new Promise(resolve=>{setTimeout(resolve,time)})}exports.sleep=sleep});define("gui",["require","exports","simulate"],function(require,exports,simulate_1){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.GUI=void 0;class GUI{isVisible=true;$container;$gamepad;$chat;$lastCommand;$lastInput;$chatInput=document.querySelector(".chat-wysiwyg-input__editor");$chatSend=document.querySelector('button[data-a-target="chat-send-button"]');constructor(){this.$container=this.buildContainer();this.$gamepad=this.buildParagraph("ðŸ”´ Manette en attente de connexion");this.$chat=this.buildParagraph("ðŸ”´ Chat en attente de dÃ©tection");this.$lastInput=this.buildParagraph("ðŸŽ® DerniÃ¨re entrÃ©e : ",[{color:"#ffffff7f"}],this.buildSpan("N/A"));this.$lastCommand=this.buildParagraph("ðŸ’¬ DerniÃ¨re commande : ",[{color:"#ffffff7f"}],this.buildSpan("N/A"));this.build();if(this.isChatAcquired){this.setChatAcquired()}}get isChatAcquired(){return this.$chatInput!==null&&this.$chatSend!==null}get hasChatError(){return document.querySelector(".chat-input-tray__open")!==null}get $closeChatErrorPopup(){return document.querySelector('.chat-input-tray__open button[title="Close"]')}setGamepad(isConnected){this.$gamepad.textContent=isConnected?"ðŸŸ¢ Manette connectÃ©e":"ðŸ”´ Manette en attente de connexion";this.$lastInput.style.color=isConnected?"":"#ffffff7f"}setChatAcquired(){this.$chat.textContent="ðŸŸ¢ AccÃ¨s au chat obtenu";this.$lastCommand.style.color=""}updateLastInput(input){const $span=this.$lastInput.querySelector("span");$span.textContent=input}updateLastCommand(command){const $span=this.$lastCommand.querySelector("span");$span.textContent=command}async send(command){if(!this.$chatInput||!this.$chatSend){return}await(0,simulate_1.simulatePaste)(this.$chatInput,command);await(0,simulate_1.sleep)(42);this.$chatSend.click();await(0,simulate_1.sleep)(42);this.$chatSend.click();await(0,simulate_1.sleep)(42);(0,simulate_1.simulateBlur)(this.$chatInput)}async erase(){if(!this.$chatInput){return}await(0,simulate_1.simulateErase)(this.$chatInput)}onKeyUp(event){if(event.key!=="Â²"){return}this.isVisible=!this.isVisible;this.$container.style.display=this.isVisible?"":"none"}build(){this.$container.appendChild(this.buildTitle());this.$container.appendChild(this.buildAuthor());this.$container.appendChild(this.$gamepad);this.$container.appendChild(this.$chat);this.$container.appendChild(this.$lastInput);this.$container.appendChild(this.$lastCommand);this.$container.appendChild(this.buildVisibilityTooltip());document.body.appendChild(this.$container);document.addEventListener("keyup",this.onKeyUp.bind(this))}buildContainer(){const $container=document.createElement("div");$container.style.zIndex="9999";$container.style.position="absolute";$container.style.top="0";$container.style.display="flex";$container.style.flexFlow="column";$container.style.width="302px";$container.style.margin="8px";$container.style.padding="8px";$container.style.color="white";$container.style.backgroundColor="#000610";$container.style.border="2px solid #ffb600";$container.style.borderRadius="8px";return $container}buildTitle(){const $title=document.createElement("h3");$title.style.margin="0";$title.style.color="#ffb600";$title.style.textAlign="center";$title.textContent="Twitch Â· BG3 Â· Gamepad";return $title}buildAuthor(){const $author=document.createElement("h5");$author.style.margin="0";$author.style.textAlign="center";$author.textContent=`by Rayshader Â· v1.0.0`;return $author}buildVisibilityTooltip(){const $p=document.createElement("p");$p.style.margin="8px";$p.append(this.buildButton("Â²"));$p.append("afficher / cacher le plugin");return $p}buildButton(button){return this.buildSpan(button,[{padding:"0 8px"},{marginRight:"8px"},{border:"1px solid #fff"},{borderBottomWidth:"3px"},{borderRadius:"6px"},{backgroundColor:"#ffffff36"}])}buildSpan(content,styles=[]){const $span=document.createElement("span");if(content){$span.textContent=content}this.addStyles($span,styles);return $span}buildParagraph(content,styles=[],child){const $p=document.createElement("p");$p.style.margin="8px";this.addStyles($p,styles);$p.textContent=content;if(child){$p.appendChild(child)}return $p}addStyles($element,styles){for(const style of styles){const key=Object.keys(style)[0];$element.style[key]=style[key]}}}exports.GUI=GUI});define("plugin",["require","exports","gamepad-event","gui"],function(require,exports,gamepad_event_1,gui_1){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.plugin=exports.Plugin=void 0;class Plugin{static logging=false;static longPressDuration=400;static longMovementDuration=400;gamepad;input;gui=new gui_1.GUI;ws;events=new gamepad_event_1.GamepadEvents;listeners=[];listenersJoystick=[];get isConnected(){return!!this.ws}static getLongPressDuration(){return this.longPressDuration}static getLongMovementDuration(){return this.longMovementDuration}static warn(message){if(!Plugin.logging){return}console.warn(message)}static log(message){if(!Plugin.logging){return}console.log(message)}pushInput(input){this.input=input;this.events.consumeInput(input);this.dispatchButtons();this.dispatchMoves()}onReleased(fn){this.listeners.push(fn)}onMoved(fn){this.listenersJoystick.push(fn)}offReleased(fn){const listener=this.listeners.indexOf(fn);if(listener===-1){return}this.listeners.splice(listener,1)}offMoved(fn){const listener=this.listenersJoystick.indexOf(fn);if(listener===-1){return}this.listeners.splice(listener,1)}hasWebSocket(){return!!this.ws}addWebSocket(ws){if(ws.url!=="wss://irc-ws.chat.twitch.tv/"){return}this.ws=ws;Plugin.log(`<plugin (websocket) />`)}async send(message){if(!this.gui.isChatAcquired){return}await this.gui.send(message);this.gui.updateLastCommand(message);setTimeout(this.detectChatError.bind(this),300);Plugin.log(`<chat message="${message}" />`)}async detectChatError(){if(!this.gui.hasChatError){return}await this.gui.erase();const $close=this.gui.$closeChatErrorPopup;if(!$close){return}$close.click()}dispatchButtons(){let event;while((event=this.events.nextButton())!==undefined){const duration=event.duration/1e3;this.gui.updateLastInput(event.button);Plugin.log(`<event (released) button="${event.button}" duration="${duration.toFixed(2)} s" />`);for(const listener of this.listeners){listener(event)}}}dispatchMoves(){let event;while((event=this.events.nextJoystick())!==undefined){const duration=event.duration/1e3;const side=event.side==="left"?"L":"R";this.gui.updateLastInput(event.button);Plugin.log(`<event (moved) side="${event.side}" button="M${side}${event.button}" duration="${duration.toFixed(2)} s" />`);for(const listener of this.listenersJoystick){listener(event)}}}}exports.Plugin=Plugin;exports.plugin=new Plugin});define("listener",["require","exports","plugin","gamepad-input"],function(require,exports,plugin_1,gamepad_input_2){"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.start=void 0;function isCompatible(){return!!navigator.getGamepads}function canListenGamepadEvents(){return"ongamepadconnected"in window}function start(){if(!isCompatible()){console.error("Your browser doesn't support the Gamepad API. Please make sure to update it to the latest "+"version. Chrome / Firefox / Edge are valid candidates.");return}document.addEventListener("keyup",onKeyUp);if(!canListenGamepadEvents()){pollGamepad();plugin_1.Plugin.log("<plugin (poll) />")}else{window.addEventListener("gamepadconnected",onConnected);window.addEventListener("gamepaddisconnected",onDisconnected)}plugin_1.Plugin.log("<plugin (start) />")}exports.start=start;function onConnected(event){const gamepad=event.gamepad;if(plugin_1.plugin.gamepad){plugin_1.Plugin.warn('<gamepad (connected) error="Only the first gamepad will be used." />');return}plugin_1.plugin.gamepad=gamepad;plugin_1.Plugin.log(`<gamepad (connected) index="${gamepad.index}" id="${gamepad.id}" />`);plugin_1.Plugin.log(`  <buttons size="${gamepad.buttons.length}" />`);plugin_1.Plugin.log(`  <axes size="${gamepad.axes.length}" />`);plugin_1.plugin.onReleased(onButtonReleased);plugin_1.plugin.onMoved(onJoystickMoved);plugin_1.plugin.gui.setGamepad(true);listenGamepad();plugin_1.Plugin.log("<plugin (listen) />")}function listenGamepad(){const gamepads=navigator.getGamepads();if(gamepads.length===0){plugin_1.Plugin.log("<plugin (release) />");return}const gamepad=gamepads[0];if(!gamepad){return}plugin_1.plugin.gamepad=gamepad;const input=(0,gamepad_input_2.getInput)(gamepad);plugin_1.plugin.pushInput(input);requestAnimationFrame(listenGamepad)}function pollGamepad(){const gamepads=navigator.getGamepads();if(gamepads.length===0){requestAnimationFrame(pollGamepad);return}const gamepad=gamepads[0];if(!gamepad){onDisconnected({gamepad:gamepad})}else if(plugin_1.plugin.gamepad===undefined){onConnected({gamepad:gamepad})}requestAnimationFrame(pollGamepad)}const digits=`&Ã©"'(-Ã¨_Ã§Ã )=`;function onKeyUp(event){if(!digits.includes(event.key)){return}const digit=digits.indexOf(event.key)+1;plugin_1.plugin.gui.updateLastInput(digit.toString());plugin_1.plugin.send(digit.toString());plugin_1.Plugin.log(`<digit command="${digit}" />`)}function onButtonReleased(event){let command=event.button;if(event.duration>=plugin_1.Plugin.getLongPressDuration()){command=`+${command}`}plugin_1.plugin.send(command);plugin_1.Plugin.log(`<send command="${command}" />`)}function onJoystickMoved(event){let command=`M${event.side==="left"?"L":"R"}${event.button}`;if(event.duration>=plugin_1.Plugin.getLongMovementDuration()){command=`+${command}`}plugin_1.plugin.send(command);plugin_1.Plugin.log(`<send command="${command}" />`)}function onDisconnected(event){const gamepad=event.gamepad;if(!plugin_1.plugin.gamepad){return}if(gamepad!==null&&plugin_1.plugin.gamepad.index!==gamepad.index){return}plugin_1.plugin.gamepad=undefined;plugin_1.plugin.gui.setGamepad(false);plugin_1.plugin.gui.updateLastInput("N/A");plugin_1.plugin.offReleased(onButtonReleased);plugin_1.plugin.offMoved(onJoystickMoved);plugin_1.Plugin.log(`<gamepad (disconnected) />`)}});define("main",["require","exports","listener"],function(require,exports,listener_1){"use strict";Object.defineProperty(exports,"__esModule",{value:true});(0,listener_1.start)()});"marker:resolver";function get_define(name){if(defines[name]){return defines[name]}else if(defines[name+"/index"]){return defines[name+"/index"]}else{const dependencies=["exports"];const factory=exports=>{try{Object.defineProperty(exports,"__cjsModule",{value:true});Object.defineProperty(exports,"default",{value:require(name)})}catch{throw Error(['module "',name,'" not found.'].join(""))}};return{dependencies:dependencies,factory:factory}}}const instances={};function resolve(name){if(instances[name]){return instances[name]}if(name==="exports"){return{}}const define=get_define(name);if(typeof define.factory!=="function"){return define.factory}instances[name]={};const dependencies=define.dependencies.map(name=>resolve(name));define.factory(...dependencies);const exports=dependencies[define.dependencies.indexOf("exports")];instances[name]=exports["__cjsModule"]?exports.default:exports;return instances[name]}if(entry[0]!==null){return resolve(entry[0])}})();